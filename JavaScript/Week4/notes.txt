Object Oriented Programming(OOP):
    A programming paradigm that considers everything as an "object" and works with it...
Objects:
    Objects have 2 things:
        i)properties - data
        ii) behaviors - functions

        Car is an object
            i) model, color, brand,..
            ii) accelerates, stops, turns
        Account is an object
            i) account_no, account_title..etc..
            ii) withdrawal,depositing,...
        Baby is an object
            i) name, hands, legs...
            ii) cries, sleeps, 

Class:
    A template that is used to create "objects"...
    Code & Data...
    Class itself can't be used, rather we make "objects" to work with class...


// let's create a class "Student"
class Student {
  //  constructor - a special function to create objects...

  constructor(fName, lName, age) {
    this.firstName = fName; //this means "ownself" the object in consideration
    this.lName = lName;
    this.age = age;
  }
}
// a constructor function is automatically called at the time of creation of an object...

// to create object of the class...

var st1 = new Student("Alan", "Smith", 24);
var st2 = new Student("Bob", "Smith", 28);
var st3 = new Student("Christina");

console.log(st3);

Lecture May 29,2023

A class is not useful unless we create object of it....
We cannot access anything of a class unless we create object of it....

"static" resources!

A static resource can be accessed without creating object of the class...

A static resource is not "object" level, rather it is "class" level...

For example: Book.abc() will work...
but book.abc() ...can't access with object...

The api to access the browser memory is "localStorage"...?built-in class or library...that we can access the browser memory...

JSON..."title":"JavaScript";










